var searchIndex = JSON.parse('{\
"englishid":{"doc":"English formatting for unsigned integer IDs and arbitrary …","t":[13,13,3,4,13,13,7,11,11,11,11,11,11,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,12],"n":["DataTooLong","EmptyInput","EnglishId","Error","UnknownWord","ValueOutOfRange","WORD_LIST","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","decode","decode_fixed_length","decode_with_custom_header","encode","encode_fixed_length","encode_with_custom_header","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","into","into","into_iter","ne","next","parse_u128","parse_u16","parse_u32","parse_u64","parse_u8","to_owned","to_string","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","words","0"],"q":["englishid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","englishid::Error"],"d":["The data was too long to be encoded. The maximum number of …","An empty string was provided as input.","An ID that can be converted to a set of “safe” words.","An error from encoding or parsing an <code>EnglishId</code>.","A word not inside of the word list was encountered.","A value was out of range. If encoding, the numerical value …","A list of words based on the list created by the EFF, but …","","","","","","","Decodes <code>englishid</code> that was previously encoded using …","Decodes <code>englishid</code> that was previously encoded using …","Decodes <code>englishid</code> that was previously encoded using …","Encodes <code>data</code> using <code>englishid</code> with enough information to be …","Encodes <code>data</code> using <code>englishid</code>, for situations where the …","Encodes <code>data</code> using <code>englishid</code>, encoding <code>header</code> at the …","","","","","","","","","","","","","","","","","","","Parses a previously-encoded <code>EnglishId</code>.","Parses a previously-encoded <code>EnglishId</code>.","Parses a previously-encoded <code>EnglishId</code>.","Parses a previously-encoded <code>EnglishId</code>.","Parses a previously-encoded <code>EnglishId</code>.","","","Encode the id to a string.","","","","","","","","Sets the number of words that will be used to encode this …",""],"i":[1,1,0,0,1,1,0,2,1,2,1,2,2,0,0,0,0,0,0,2,2,2,1,1,2,2,2,2,2,2,1,2,2,1,2,2,2,0,0,0,0,0,2,2,2,1,2,1,2,1,2,1,2,3],"f":[null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["englishid",3]],[[]],[[["str",15]],[["vec",3,["u8"]],["error",4],["result",4,["vec","error"]]]],[[["usize",15],["str",15]],[["vec",3,["u8"]],["error",4],["result",4,["vec","error"]]]],[[["str",15],["fnonce",8]],[["vec",3,["u8"]],["error",4],["result",4,["vec","error"]]]],[[],[["result",4,["string","error"]],["string",3],["error",4]]],[[],["string",3]],[[["u16",15]],[["result",4,["string","error"]],["string",3],["error",4]]],[[["englishid",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["u8",15]]],[[["u128",15]]],[[["u64",15]]],[[["u32",15]]],[[]],[[["u16",15]]],[[]],[[]],[[]],[[]],[[]],[[["englishid",3]],["bool",15]],[[],["option",4]],[[["str",15]],[["result",4,["u128","error"]],["u128",15],["error",4]]],[[["str",15]],[["u16",15],["error",4],["result",4,["u16","error"]]]],[[["str",15]],[["error",4],["result",4,["u32","error"]],["u32",15]]],[[["str",15]],[["result",4,["u64","error"]],["u64",15],["error",4]]],[[["str",15]],[["result",4,["u8","error"]],["u8",15],["error",4]]],[[]],[[],["string",3]],[[],[["result",4,["string","error"]],["string",3],["error",4]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15]]],null],"p":[[4,"Error"],[3,"EnglishId"],[13,"UnknownWord"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};